@startuml

skinparam classAttributeIconSize 0

' ---------------------------
' Client MVC
' ---------------------------
package "Client MVC" {
  class ClientModel {
    - clientID : int
    - name : String
    - email : String
    - password : String
    - type : String
    - age : int
  }

  class ClientView {
    + displayClientInfo(prCLient: ClientModel) : void
    + getClientInput() : Map
  }

  class ClientController {
    + createClient(prClient: Map) : void
    + updateClient(prClient: Map) : void
    + deleteClient(prID: int) : void
  }

  ClientController ..> ClientModel : uses
  ClientController ..> ClientView : interacts with
}
' ---------------------------
' Attraction MVC
' ---------------------------
package "Attraction MVC" {
  class AttractionModel {
    - attractionID : int
    - price : double
    - capacity : int
    - name : String
    - category : String
    - description : String
  }

  class AttractionView {
    + displayAttraInfo(prAttraction: AttractionModel) : void
    + listAttra(prListAttra: List<AttractionModel>) : void
  }

  class AttractionController {
    + createAttra(prAttraction: Map) : void
    + updateAttra(prAttraction: Map) : void
    + deleteAttra(prID: int) : void
  }

  AttractionController ..> AttractionModel : uses
  AttractionController ..> AttractionView : interacts with
}
' ---------------------------
' Reservation MVC
' ---------------------------
package "Reservation MVC" {
  class ReservationModel {
    - reservationID : int
    - clientID : int
    - attractionID : int
    - reservationDate : Date
    - numberTickets : int
    - price : double
    - discount : double
  }

  class ReservationView {
    + displayReservation(prReservation: ReservationModel) : void
    + getReservationInput() : Map
  }

  class ReservationController {
    + createReservation(prReservation: Map) : void
    + cancelReservation(prID: int) : void
  }

  ReservationController ..> ReservationModel : uses
  ReservationController ..> ReservationView : interacts with
}
@enduml